#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/.."

ANNOTATIONS=$(jq -cr '.["metadata"]["annotations"]' <<< "${BUILDKITE_PLUGIN_CONFIGURATION}")
PP_ANNOTATIONS=$(jq -r . <<< "${ANNOTATIONS}")

POD_SPEC=$(jq -cr '.["pod-spec"]' <<< "${BUILDKITE_PLUGIN_CONFIGURATION}")


MOUNT_SOURCE=$(jq -cr '.["mount-source"]' <<< "${BUILDKITE_PLUGIN_CONFIGURATION}")
if [ "${MOUNT_SOURCE}" == "true" ]; then
  CONTAINER_NAME=$(jq -cr ".containers[0].name" <<< "${POD_SPEC}")
  echo "Adding a volume mount to ${CONTAINER_NAME} for the source code at /app/src"
  # Add the hostPath volume
  POD_SPEC=$(jq -cr ".volumes |= . + [{\"name\":\"source-code\", \"hostPath\":{\"path\":\"${BUILDKITE_BUILD_CHECKOUT_PATH}\"}}]" <<< "${POD_SPEC}")
  # Add the volumeMount
  POD_SPEC=$(jq -cr ".containers[0].volumeMounts |= . + [{\"name\":\"source-code\", \"mountPath\": \"/app/src\"}]" <<< "${POD_SPEC}")
  # Add the nodeSelector
  POD_SPEC=$(jq -cr ".nodeName = \"${BUILDKITE_AGENT_NODE_NAME}\"" <<< "${POD_SPEC}")
fi

PP_POD_SPEC=$(jq -r . <<< "${POD_SPEC}")
echo -e "Creating job with pod-spec:\n${PP_POD_SPEC}"
cat <<EOF | kubectl create -f -
apiVersion: batch/v1
kind: Job
metadata:
  annotations: ${ANNOTATIONS}
  generateName: ${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BUILD_NUMBER}-
  labels:
    service: buildkite
    pipeline: ${BUILDKITE_PIPELINE_SLUG}
    step: ${BUILDKITE_STEP_ID}
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      annotations: ${ANNOTATIONS}
      labels:
        service: buildkite
        pipeline: ${BUILDKITE_PIPELINE_SLUG}

        step: ${BUILDKITE_STEP_ID}
    spec: ${POD_SPEC}
EOF

echo -e "Using annotations\n${PP_ANNOTATIONS}"

echo "Waiting for job to be complete..."
kubectl wait --for=condition=complete job -l step=${BUILDKITE_STEP_ID} --timeout=60s || true

echo "Job logs..."
kubectl logs -l step=${BUILDKITE_STEP_ID} --tail=-1 --follow=true

# Set exit code from container status
kubectl get -l step=${BUILDKITE_STEP_ID} pod -o json | jq -e ".items[].status.containerStatuses[0].state.terminated.exitCode"
